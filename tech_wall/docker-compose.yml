services:
  reverse-proxy:
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=elliott@zenful.cloud"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
      - "8080:8080"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
  db:
    image: postgres:16-alpine
    container_name: tech_wall_db
    restart: always
    ports:
      - "5432:5432"
    secrets:
      - db-password
    environment:
      POSTGRES_DB: tech_wall
      POSTGRES_USER: tech_wall
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./backend/src/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tech_wall -d tech_wall"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    restart: always
    ports:
      - "3000:3000"
    secrets:
      - db-password
      - jwt-secret
      - jwt-refresh-secret
    deploy:
      mode: replicated
      replicas: 3
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend/.env.production

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
    deploy:
      mode: replicated
      replicas: 3
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-router.rule=Host(`srv734963.hstgr.cloud`)"
      - "traefik.http.routers.frontend-router.entrypoints=websecure"
      - "traefik.http.routers.frontend-router.tls.certresolver=myresolver"

volumes:
  postgres-data:
  letsencrypt:

secrets:
  db-password:
    file: ~/db/password.txt
  jwt-secret:
    file: ~/secrets/jwt_secret.txt
  jwt-refresh-secret:
    file: ~/secrets/jwt_refresh_secret.txt
